{"ast":null,"code":"var _jsxFileName = \"/Users/samveltadevosyan_1/dev/telman-project/src/sections/preloader.js\";\nimport React, { Fragment } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Preloader = () => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"preloader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"#\",\n      className: \"back-to-top d-flex align-items-center justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"bi bi-arrow-up-short\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Preloader;\nexport default Preloader;\n\nvar _c;\n\n$RefreshReg$(_c, \"Preloader\");","map":{"version":3,"names":["React","Fragment","Preloader"],"sources":["/Users/samveltadevosyan_1/dev/telman-project/src/sections/preloader.js"],"sourcesContent":["import React, { Fragment } from \"react\";\n\nconst Preloader = () => {\n  return (\n    <Fragment>\n      <div id=\"preloader\"></div>\n      <a\n        href=\"#\"\n        className=\"back-to-top d-flex align-items-center justify-content-center\"\n      >\n        <i className=\"bi bi-arrow-up-short\"></i>\n      </a>\n    </Fragment>\n  );\n};\n\nexport default Preloader;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EACtB,oBACE,QAAC,QAAD;IAAA,wBACE;MAAK,EAAE,EAAC;IAAR;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MACE,IAAI,EAAC,GADP;MAEE,SAAS,EAAC,8DAFZ;MAAA,uBAIE;QAAG,SAAS,EAAC;MAAb;QAAA;QAAA;QAAA;MAAA;IAJF;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CAZD;;KAAMA,S;AAcN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}